<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration SYSTEM "hibernate-configuration-3.0.dtd" >
<hibernate-configuration>
	<session-factory>
		<!-- 1. 宣告連結資料庫所需的資訊(透過JDBC API來連結)之設定方式 -->
		<property name="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</property>
		<property name="hibernate.connection.username">root</property>
		<property name="hibernate.connection.password">root</property>
		<property name="hibernate.connection.url">jdbc:mysql://localhost:3306/mydatabase?useUnicode=yes&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Taipei&amp;allowPublicKeyRetrieval=true</property>
		<!-- 2. 宣告SQL方言(MySQL) -->
		<property name="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</property>

		<!-- 2. 其他與資料存取有關的設定 -->
		
		<!-- 每次啟動 Hibernate 時都會刪除舊的 schema，然後重新創建一個新的 schema。這會導致數據庫中的所有數據被清除。 -->
		<property name="hbm2ddl.auto">update</property>
		<!-- 顯示實際操作資料庫時的SQL -->
		<property name="show_sql">true</property>
		<!-- 將顯示的SQL排版，方便觀看 -->
		<property name="format_sql">true</property>
		
		<!-- 這意味著在同一個線程中，無論在哪裡調用 getCurrentSession()，都會得到相同的 Session 實例。 -->
		<property name="current_session_context_class">thread</property>

		<!-- 定義程式交易管理的類型，本範例使用JDBC Transaction -->
		<property name="transaction.coordinator_class">org.hibernate.transaction.JDBCTransactionFactory</property>
		<!-- Hibernate 相關效能設定 -->
		<property name="bytecode.use_reflection_optimizer">false</property>
		<property name="connection_pool_size">5</property>

		<!-- 3. 宣告該專案所使用的永續類別 -->
		<!-- persistence entity -->
		<mapping class="model.Category" />
		<mapping class="model.ProductEntity" />
		
	</session-factory>
</hibernate-configuration>
